buildscript {
    ext {
        kotlin_version = '1.2.41'
        pactVersion = '3.6.1'
    }
}

plugins {
    id "application"
    id "org.jetbrains.kotlin.jvm" version "1.2.41"
    id "au.com.dius.pact" version "3.6.1"
    id "com.github.johnrengelman.processes" version "0.5.0"
    id "com.wiredforcode.spawn" version "0.8.2"
    id 'com.github.johnrengelman.shadow' version '4.0.3'
}

apply plugin: no.dervis.StartAppPlugin

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "com.sparkjava:spark-kotlin:1.0.0-alpha"
    compile "com.google.code.gson:gson:2.8.5"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.5"
    compile gradleApi()
}

version = "1.2"
mainClassName = "no.dervis.spark.app.Main"

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

import com.github.jengelman.gradle.plugins.processes.tasks.*

task startProvider(type: Fork) {
    executable "java"
    args = ["-jar", "${shadowJar.archivePath}"]

    doLast {
        Thread.sleep(3000) // time to start
    }
}

task stopProvider {
  doLast {
      startProvider.processHandle.abort()
  }
}

def pactBrokerUrl = System.getenv('PACTBROKER_URL') ? System.getenv('PACTBROKER_URL') :
  "https://nav.pact.dius.com.au"
def pactBrokerUsername = System.getenv('PACTBROKER_USERNAME') ? System.getenv('PACTBROKER_USERNAME') : ''
def pactBrokerPassword = System.getenv('PACTBROKER_PASSWORD') ? System.getenv('PACTBROKER_PASSWORD') : ''

pact {

    serviceProviders {
        "spark-app" {
            port = 4567
            startProviderTask = startProvider
            terminateProviderTask = stopProvider

            hasPactsFromPactBroker(pactBrokerUrl,
                    authentication: ['Basic', pactBrokerUsername, pactBrokerPassword])
        }
    }
}

apply from: "${rootDir}/common.gradle"
